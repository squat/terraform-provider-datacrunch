// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type DeleteVolumeByIDRequestBody struct {
	// delete volume permanently or not
	IsPermanent *bool `json:"is_permanent,omitempty"`
}

func (o *DeleteVolumeByIDRequestBody) GetIsPermanent() *bool {
	if o == nil {
		return nil
	}
	return o.IsPermanent
}

type DeleteVolumeByIDRequest struct {
	RequestBody *DeleteVolumeByIDRequestBody `request:"mediaType=application/json"`
	// volume id
	VolumeID interface{} `pathParam:"style=simple,explode=false,name=volumeId"`
}

func (o *DeleteVolumeByIDRequest) GetRequestBody() *DeleteVolumeByIDRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *DeleteVolumeByIDRequest) GetVolumeID() interface{} {
	if o == nil {
		return nil
	}
	return o.VolumeID
}

type DeleteVolumeByIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *DeleteVolumeByIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DeleteVolumeByIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DeleteVolumeByIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
