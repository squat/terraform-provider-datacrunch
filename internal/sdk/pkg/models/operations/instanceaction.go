// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"errors"
	"github.com/squat/terraform-provider-datacrunch/internal/sdk/pkg/models/shared"
	"github.com/squat/terraform-provider-datacrunch/internal/sdk/pkg/utils"
	"net/http"
)

type IDType string

const (
	IDTypeStr        IDType = "str"
	IDTypeArrayOfstr IDType = "arrayOfstr"
)

type ID struct {
	Str        *string
	ArrayOfstr []string

	Type IDType
}

func CreateIDStr(str string) ID {
	typ := IDTypeStr

	return ID{
		Str:  &str,
		Type: typ,
	}
}

func CreateIDArrayOfstr(arrayOfstr []string) ID {
	typ := IDTypeArrayOfstr

	return ID{
		ArrayOfstr: arrayOfstr,
		Type:       typ,
	}
}

func (u *ID) UnmarshalJSON(data []byte) error {

	str := new(string)
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = str
		u.Type = IDTypeStr
		return nil
	}

	arrayOfstr := []string{}
	if err := utils.UnmarshalJSON(data, &arrayOfstr, "", true, true); err == nil {
		u.ArrayOfstr = arrayOfstr
		u.Type = IDTypeArrayOfstr
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u ID) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfstr != nil {
		return utils.MarshalJSON(u.ArrayOfstr, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

// InstanceActionRequestBody - id of instances to perform the action on, and the action type
type InstanceActionRequestBody struct {
	Action shared.ActionType `json:"action"`
	ID     ID                `json:"id"`
	// array of storage volume ids
	VolumeIds []string `json:"volume_ids,omitempty"`
}

func (o *InstanceActionRequestBody) GetAction() shared.ActionType {
	if o == nil {
		return shared.ActionType("")
	}
	return o.Action
}

func (o *InstanceActionRequestBody) GetID() ID {
	if o == nil {
		return ID{}
	}
	return o.ID
}

func (o *InstanceActionRequestBody) GetVolumeIds() []string {
	if o == nil {
		return nil
	}
	return o.VolumeIds
}

type InstanceActionResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *InstanceActionResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *InstanceActionResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *InstanceActionResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
