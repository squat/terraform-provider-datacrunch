// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InstanceStatus string

const (
	InstanceStatusRunning             InstanceStatus = "running"
	InstanceStatusProvisioning        InstanceStatus = "provisioning"
	InstanceStatusOffline             InstanceStatus = "offline"
	InstanceStatusStartingHibernation InstanceStatus = "starting hibernation"
	InstanceStatusHibernating         InstanceStatus = "hibernating"
	InstanceStatusRestoring           InstanceStatus = "restoring"
	InstanceStatusError               InstanceStatus = "error"
)

func (e InstanceStatus) ToPointer() *InstanceStatus {
	return &e
}

func (e *InstanceStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "running":
		fallthrough
	case "provisioning":
		fallthrough
	case "offline":
		fallthrough
	case "starting hibernation":
		fallthrough
	case "hibernating":
		fallthrough
	case "restoring":
		fallthrough
	case "error":
		*e = InstanceStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceStatus: %v", v)
	}
}
