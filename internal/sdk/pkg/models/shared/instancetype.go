// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InstanceType - the instance type
type InstanceType string

const (
	InstanceTypeEightV10048M       InstanceType = "8V100.48M"
	InstanceTypeEightV10048V       InstanceType = "8V100.48V"
	InstanceTypeFourV10020V        InstanceType = "4V100.20V"
	InstanceTypeTwoV10010V         InstanceType = "2V100.10V"
	InstanceTypeOneV1006V          InstanceType = "1V100.6V"
	InstanceTypeEightRtx6000Ada80V InstanceType = "8RTX6000ADA.80V"
	InstanceTypeFourRtx6000Ada40V  InstanceType = "4RTX6000ADA.40V"
	InstanceTypeTwoRtx6000Ada20V   InstanceType = "2RTX6000ADA.20V"
	InstanceTypeOneRtx6000Ada10V   InstanceType = "1RTX6000ADA.10V"
	InstanceTypeEightA600080V      InstanceType = "8A6000.80V"
	InstanceTypeFourA600040V       InstanceType = "4A6000.40V"
	InstanceTypeTwoA600020V        InstanceType = "2A6000.20V"
	InstanceTypeOneA600010V        InstanceType = "1A6000.10V"
	InstanceTypeEightA100176V      InstanceType = "8A100.176V"
	InstanceTypeFourA10088V        InstanceType = "4A100.88V"
	InstanceTypeTwoA10044V         InstanceType = "2A100.44V"
	InstanceTypeOneA10022V         InstanceType = "1A100.22V"
	InstanceTypeEightA10040S176V   InstanceType = "8A100.40S.176V"
	InstanceTypeFourA10040S88V     InstanceType = "4A100.40S.88V"
	InstanceTypeTwoA10040S44V      InstanceType = "2A100.40S.44V"
	InstanceTypeOneA10040S22V      InstanceType = "1A100.40S.22V"
	InstanceTypeCpu4V16G           InstanceType = "CPU.4V.16G"
	InstanceTypeCpu8V32G           InstanceType = "CPU.8V.32G"
	InstanceTypeCpu16V64G          InstanceType = "CPU.16V.64G"
	InstanceTypeCpu32V128G         InstanceType = "CPU.32V.128G"
	InstanceTypeCpu64V256G         InstanceType = "CPU.64V.256G"
	InstanceTypeCpu96V384G         InstanceType = "CPU.96V.384G"
	InstanceTypeCpu120V480G        InstanceType = "CPU.120V.480G"
)

func (e InstanceType) ToPointer() *InstanceType {
	return &e
}

func (e *InstanceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "8V100.48M":
		fallthrough
	case "8V100.48V":
		fallthrough
	case "4V100.20V":
		fallthrough
	case "2V100.10V":
		fallthrough
	case "1V100.6V":
		fallthrough
	case "8RTX6000ADA.80V":
		fallthrough
	case "4RTX6000ADA.40V":
		fallthrough
	case "2RTX6000ADA.20V":
		fallthrough
	case "1RTX6000ADA.10V":
		fallthrough
	case "8A6000.80V":
		fallthrough
	case "4A6000.40V":
		fallthrough
	case "2A6000.20V":
		fallthrough
	case "1A6000.10V":
		fallthrough
	case "8A100.176V":
		fallthrough
	case "4A100.88V":
		fallthrough
	case "2A100.44V":
		fallthrough
	case "1A100.22V":
		fallthrough
	case "8A100.40S.176V":
		fallthrough
	case "4A100.40S.88V":
		fallthrough
	case "2A100.40S.44V":
		fallthrough
	case "1A100.40S.22V":
		fallthrough
	case "CPU.4V.16G":
		fallthrough
	case "CPU.8V.32G":
		fallthrough
	case "CPU.16V.64G":
		fallthrough
	case "CPU.32V.128G":
		fallthrough
	case "CPU.64V.256G":
		fallthrough
	case "CPU.96V.384G":
		fallthrough
	case "CPU.120V.480G":
		*e = InstanceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceType: %v", v)
	}
}
